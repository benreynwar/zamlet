ALU Reservation Station
-----------------------

inputs
  i_valid
  i_mode
  i_src1  (32 bit value) or (3 bit reg address + 2 bit w ident) (33 bit total)
  i_src2 
  i_accum  (32 bit value) or (3 bit reg address (constant) + 2 bit w ident) (33 bit total)  (accumulator init value)
  i_mask (1 bit) or (3 bit reg address (constant) + 2 bit w ident) (3 bit total)
  i_dest  3 bit reg address + 2 bit w ident

outputs
  i_ready

  o_valid
  o_mode
  o_src1 (32 bit value)
  o_src2 (32 bit value)
  o_dst_addr (3 bit reg address + 2 bit w ident)

  write_valids[3:0]  (writes coming from the ALU or store or packets or loop)
  write_values[3:0][31:0] (write values)
  write_addresses[3:0][3+2-1:0]

constants

  N_ALURS_SLOTS

logic
  We have a small memory of depth N_ALURS_SLOTS
  i_ready is high as long as there is a free slot.
  When we receive i_* data we place it in a slot.
  When a write_* signal matches a required value in a slot then we update that slot.
  When a slot has all signals resolved we send it out on the o_* signals.

cost
  I expect it will be expensive to update the slot.
  Each slot has 4 reqs.  There will be a mux from the 3 writes into the mux along with address checking.
  It will be important to investigate number of slots.
